{"version":3,"file":"map-manager.js","sourceRoot":"","sources":["../../../../src/components/component-game-planar/map-manager.ts"],"names":[],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\";\r\nimport {colors} from \"./planartest-init\";\r\nimport {Map} from \"./map\";\r\nimport {Delay, FadeTo, scheduler, Sequence} from \"anim\";\r\nimport { Level, PlanartestLog } from \"../../models/game-models/planartest-log\";\r\nimport { ComponentGamePlanar } from \"./component-game-planar\";\r\nimport { translate } from \"../../utils/translations.util\";\r\n\r\nexport class MapManager extends PIXI.Container {\r\n\tprivate currLevel: number = 0;\r\n\tprivate map: Map;\r\n\tprivate levelAnim: Sequence;\r\n\tprivate levelText: PIXI.Text;\r\n\tprivate levelStartTime\r\n\tprivate endOfLevelAnim: Delay;\r\n\tpublic maxLevel = 3;\r\n\r\n\tpublic constructor(private dim: any, private specialLog: PlanartestLog, private game: ComponentGamePlanar) {\r\n\t\tsuper();\r\n\t\tthis.currLevel = 0;\r\n\r\n\t\tconst background = new PIXI.Graphics();\r\n\t\tbackground.beginFill(colors.DARK);\r\n\t\tbackground.drawRect(0, 0, this.dim.w, this.dim.h);\r\n\t\tbackground.endFill();\r\n\t\tthis.addChild(background);\r\n\r\n\t\tthis.endOfLevelAnim = new Delay().setDuration(800);\r\n\t\tthis.endOfLevelAnim;\r\n\t\tthis.levelAnim = new Sequence([\r\n\t\t\tnew Delay().setDuration(500),\r\n\t\t\tnew FadeTo(1).setDuration(200),\r\n\t\t\tnew Delay().setDuration(700),\r\n\t\t\tnew FadeTo(0).setDuration(200),\r\n\t\t\tnew Delay().setDuration(300)\r\n\t\t]);\r\n\t\tthis.levelText = new PIXI.Text(\"\", {align: 'center', fontSize: Math.min(70, 70 * this.dim.w / 600), fill: colors.TEXT});\r\n\t\tthis.levelText.position.set(this.dim.w / 2, this.dim.h / 2);\r\n\t\tthis.levelText.anchor.set(0.5, 0.5);\r\n\t\tthis.levelText.alpha = 0;\r\n\r\n\t\tthis.startMap();\r\n\t}\r\n\r\n\tprivate async startMap(): Promise<void> {\r\n\t\tif (this.map) {\r\n\t\t\tthis.map.dispose();\r\n\t\t\tthis.removeChild(this.map);\r\n\t\t}\r\n\t\tawait this.startLevelAnim();\r\n\t\tthis.levelStartTime = Date.now();\r\n\t\tthis.map = new Map(this.settings, this.dim, this.mapFinished);\r\n\t\tthis.addChild(this.map);\r\n\t}\r\n\r\n\tprivate async startLevelAnim(): Promise<PIXI.Container> {\r\n\t\tswitch (this.currLevel) {\r\n\t\t\tcase 0: this.levelText.text = translate(\"first_round\", this.game.customLang); break;\r\n\t\t\tcase 1: this.levelText.text = translate(\"second_round\", this.game.customLang); break;\r\n\t\t\tdefault: this.levelText.text = translate(\"last_round\", this.game.customLang);\r\n\t\t}\r\n\t\tthis.addChild(this.levelText);\r\n\t\treturn scheduler.run(this.levelAnim, this.levelText);\r\n\t}\r\n\r\n\tprivate get settings(): ISettings {\r\n\t\tconst result: ISettings = {\r\n\t\t\tmaxDeg: 0,\r\n\t\t\tvertexNumber: 0,\r\n\t\t\tisHard: false,\r\n\t\t};\r\n\t\tswitch (this.currLevel) {\r\n\t\t\tcase 0:\r\n\t\t\t\tresult.maxDeg = 5;\r\n\t\t\t\tresult.vertexNumber = 9;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tresult.maxDeg = 6;\r\n\t\t\t\tresult.vertexNumber = 11;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tresult.maxDeg = 7;\r\n\t\t\t\tresult.vertexNumber = 13;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readonly mapFinished = (): void => {\r\n\t\tconsole.log(this.map.numberOfClicks)\r\n\t\tlet duration = Date.now()-this.levelStartTime\r\n\t\tconsole.log(duration)\r\n\t\tthis.specialLog.addNewLevel(new Level(this.map.numberOfClicks, duration))\r\n\t\tthis.currLevel++;\r\n\t\tif (this.currLevel >= this.maxLevel) {\r\n\t\t\tthis.game.calculateScore();\r\n\t\t\tconsole.log(this.specialLog)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.startMap();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport interface ISettings {\r\n\tmaxDeg: number;\r\n\tvertexNumber: number;\r\n\tisHard: boolean;\r\n}"]}