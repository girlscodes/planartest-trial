{"version":3,"file":"vertex.js","sourceRoot":"","sources":["../../../../src/components/component-game-planar/vertex.ts"],"names":[],"mappings":"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","sourcesContent":["import * as PIXI  from \"pixi.js\";\r\nimport { colors } from \"./planartest-init\";\r\n\r\nexport class Vertex extends PIXI.Graphics {\r\n\tprivate readonly ID: number;\r\n\tprivate readonly radius: number;\r\n\tprivate readonly neighbours: number[];\r\n\tprivate highlightedNeighbours: number[];\r\n\r\n\tconstructor(id: number, radius: number) {\r\n\t\tsuper();\r\n\t\tthis.ID = id;\r\n\t\tthis.radius = radius;\r\n\t\tthis.neighbours = [];\r\n\t\tthis.highlightedNeighbours = [];\r\n\t\tthis.interactive = true;\r\n\t\tthis.buttonMode = true;\r\n\t}\r\n\r\n\tgetID() {\r\n\t\treturn this.ID;\r\n\t}\r\n\r\n\tgetX() {\r\n\t\treturn this.x;\r\n\t}\r\n\r\n\tgetY() {\r\n\t\treturn this.y;\r\n\t}\r\n\r\n\tsetPosition(x: number, y: number) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n\r\n\tdraw(isMarked: boolean) {\r\n\t\tthis.clear();\r\n\t\tif (isMarked) {\r\n\t\t\tthis.beginFill(colors.OFF_WHITE); // red\r\n\t\t} else {\r\n\t\t\tthis.beginFill(colors.LIGHT); // blue\r\n\t\t}\r\n\t\tthis.drawCircle(0, 0, this.radius);\r\n\t\tthis.endFill();\r\n\t}\r\n\r\n\tgetNeighbourCounter() {\r\n\t\treturn this.neighbours.length;\r\n\t}\r\n\r\n\tgetNeighbour(index: number) {\r\n\t\tif (this.neighbours.length > index) {\r\n\t\t\treturn this.neighbours[index];\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\taddNeighbour(neighbourID: number) {\r\n\t\tconst length = this.neighbours.length;\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tif (this.neighbours[i] == neighbourID) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.neighbours[length] = neighbourID;\r\n\t}\r\n\r\n\tgetHighlightedNeighbourCounter() {\r\n\t\treturn this.highlightedNeighbours.length;\r\n\t}\r\n\r\n\tgetHighlightedNeighbour(index: number) {\r\n\t\tif (index >= 0 && index < this.highlightedNeighbours.length) {\r\n\t\t\treturn this.highlightedNeighbours[index];\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\taddHighlightedNeighbours = (neighbourID: number) => {\r\n\t\tconst length = this.highlightedNeighbours.length;\r\n\t\tfor (let i = 0; i < length; i++) {\r\n\t\t\tif (this.highlightedNeighbours[i] == neighbourID) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.highlightedNeighbours[length] = neighbourID;\r\n\t};\r\n\r\n\tclearHighlightList() {\r\n\t\tthis.highlightedNeighbours = [];\r\n\t}\r\n\r\n\trandomMove() {\r\n\t\tvar random = Math.floor(Math.random() * 5);\r\n\t\tswitch (random) {\r\n\t\t\tcase 0:\r\n\t\t\t\tthis.x -= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tthis.x += 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tthis.y -= 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tthis.y += 2;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n}\r\n"]}